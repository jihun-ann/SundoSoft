<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">

    <!-- 회원가입 저장처리 -->
    <insert id="regiUser" parameterType="business.com.user.service.UserVO">
    	<selectKey keyProperty="userNo" resultType="string" order="BEFORE">
    		SELECT NEXTVAL('SEQ_USER')
    	</selectKey>
        INSERT
          INTO TMP_USER
             ( USER_NO,
               USER_ID,
               USER_NM,
               USER_CD,
               PSWD,
               EMAIL,
               MOBILE,
               JOIN_YMD,
               RGTR_NO,
               REG_YMD
             )
        VALUES
             ( #{userNo},
               #{userId},
               #{userNm},
               #{userCd},
               #{pswd},
               #{email},
               #{mobile},
               TO_CHAR(NOW(),'YYYYMMDD'),
               #{gsUserNo},
               NOW()
             )
    </insert>
    <!-- 권한 등록 -->
    <insert id="regiRole" parameterType="business.com.user.service.UserVO">
		INSERT 
		  INTO SYS_ROLE_USER
		     ( ROLE_ID,
			   USER_NO,
			   RGTR_NO,
			   REG_YMD
		     )
		VALUES
		     ( #{roleId},
		       #{userNo},
			   #{gsUserNo},
			   NOW()
		     )
	</insert>

	 <!-- 권한 등록여부 확인 -->
    <select id="existRole" resultType="boolean" parameterType="business.com.user.service.UserVO">
    	SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
    	  FROM SYS_ROLE_USER
         WHERE ROLE_ID = #{roleId}
           AND USER_NO = #{userNo}
    </select>

    <!-- 중복가입자 체크 -->
    <select id="existUser" resultType="boolean" parameterType="string">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
          FROM TMP_USER A
         WHERE USER_ID = #{userId}
    </select>
    
    <!-- 로그인사용자정보 칼럼 -->
    <sql id="Sql-Column-UserInfo">
		       U.USER_NO                              		AS "userNo"
		     , U.USER_ID                              		AS "userId"
		     , U.USER_NM                              		AS "userNm"
		     , U.USER_CD                              		AS "userCd"
		     , U.PSWD                                  		AS "password"
		     , U.EMAIL                               		AS "email"
		     , U.MOBILE                             		AS "mobile"
		     , FN_FMT_STRTODATE(U.JOIN_YMD,     '-')  		AS "joinYmd"
		     , FN_FMT_STRTODATE(U.PSWD_LOCK_YMD,'-')  		AS "pswdLockYmd"
		     , U.PSWD_ERR_CNT                         		AS "pswdErrCnt"
		     , FN_FMT_STRTODATE(U.PSWD_CHG_YMD, '-')  		AS "pswdChgYmd"
		     , FN_FMT_STRTODATE(U.PSWD_NEXT_YMD,'-')  		AS "pswdNextYmd"
		     , TO_CHAR(COALESCE(U.LST_LGN_DT, NOW()), 'yyyy-mm-dd hh24:mi:ss') 	AS "lstLgnDt"
		     , R.ROLE_ID                              		AS "roleId"
		     , (SELECT ROLE_NM
		          FROM SYS_ROLE
		         WHERE ROLE_ID = R.ROLE_ID)           		AS "roleNm"
             , CURRENT_DATE - COALESCE(COALESCE(TO_DATE(NULLIF(U.PSWD_CHG_YMD,''), 'yyyymmdd'), U.REG_YMD::DATE), TO_DATE('20000101', 'yyyymmdd'))   AS "diffDays"
             , CURRENT_DATE - COALESCE(TO_DATE(U.PSWD_NEXT_YMD, 'yyyymmdd'), CURRENT_DATE)                                      AS "diffNextDays"
    </sql>

	<!-- 로그인시 사용자정보 조회 -->
    <select id="getUserInfo" resultType="common.user.UserInfo" parameterType="string">
        SELECT /* 사용자정보 조회 */
               <include refid="Sql-Column-UserInfo"/>
          FROM TMP_USER U
             , (
                SELECT A.USER_NO
                     , ARRAY_TO_STRING(ARRAY_AGG(A.ROLE_ID), ',') AS ROLE_ID
                  FROM SYS_ROLE_USER A
                     , SYS_ROLE      B
                     , TMP_USER      C
                 WHERE A.USER_NO   = C.USER_NO
                   AND A.ROLE_ID   = B.ROLE_ID
                   AND C.USER_ID   = #{userId}
                 GROUP BY A.USER_NO
               ) R
         WHERE U.USER_NO = R.USER_NO
           AND U.USER_ID = #{userId}
         LIMIT 1
    </select>
    
	<!-- OAUTH 로그인시 사용자정보 조회 -->
    <select id="getUserInfoByOauth" resultType="common.user.UserInfo" parameterType="business.com.user.service.OAuthVO">
        SELECT /* 사용자정보 조회 */
               <include refid="Sql-Column-UserInfo"/>
          FROM TMP_USER U
             , (
                SELECT A.USER_NO
                     , ARRAY_TO_STRING(ARRAY_AGG(A.ROLE_ID), ',') AS ROLE_ID
                  FROM SYS_ROLE_USER A
                     , SYS_ROLE      B
                     , TMP_USER      C
                 WHERE A.USER_NO   = C.USER_NO
                   AND A.ROLE_ID   = B.ROLE_ID
                   AND EXISTS (
                       SELECT 1
                         FROM TMP_OAUTH
                        WHERE USER_NO = C.USER_NO
                          AND OATH_CD = #{oathCd}
                          AND OATH_ID = #{oathId}
                       )
                 GROUP BY A.USER_NO
               ) R
         WHERE U.USER_NO = R.USER_NO
           AND EXISTS (
               SELECT 1
                 FROM TMP_OAUTH
                WHERE USER_NO = U.USER_NO
                  AND OATH_CD = #{oathCd}
                  AND OATH_ID = #{oathId}
               )
         LIMIT 1
    </select>


    <!-- 로그인 실패 정보 업데이트(패스워드 실패횟수, 잠금시간)  -->
    <update id="updtPwdErrCnt">
        UPDATE TMP_USER
           SET PSWD_ERR_CNT = #{pswdErrCnt}
          <if test="pswdErrCnt >= 5">
             , PSWD_LOCK_YMD = TO_CHAR(CURRENT_DATE,'YYYYMMDD')
          </if>
         WHERE USER_ID = #{userId}
    </update>

    <!-- 로그인 시간 등록, 로그인 에러카운터 0으로 초기화 -->
    <update id="updtLoginTime" parameterType="string">
        UPDATE TMP_USER
           SET LST_LGN_DT   = NOW()
             , PSWD_ERR_CNT = 0
         WHERE USER_ID      = #{userId}
    </update>

    <!-- 사용자암호 일치여부 확인-->
    <select id="existUserPswd" resultType="int" parameterType="java.util.HashMap">
        SELECT COUNT(*)
          FROM TMP_USER A
         WHERE USER_ID = #{userId}
           AND PSWD    = #{password}
    </select>

</mapper>